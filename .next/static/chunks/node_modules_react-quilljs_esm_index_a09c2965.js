(globalThis.TURBOPACK || (globalThis.TURBOPACK = [])).push([typeof document === "object" ? document.currentScript : undefined,
"[project]/node_modules/react-quilljs/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "useQuill",
    ()=>useQuill
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
const theme = 'snow';
const modules = {
    toolbar: [
        [
            'bold',
            'italic',
            'underline',
            'strike'
        ],
        [
            {
                align: []
            }
        ],
        [
            {
                list: 'ordered'
            },
            {
                list: 'bullet'
            }
        ],
        [
            {
                indent: '-1'
            },
            {
                indent: '+1'
            }
        ],
        [
            {
                size: [
                    'small',
                    false,
                    'large',
                    'huge'
                ]
            }
        ],
        [
            {
                header: [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    false
                ]
            }
        ],
        [
            'link',
            'image',
            'video'
        ],
        [
            {
                color: []
            },
            {
                background: []
            }
        ],
        [
            'clean'
        ]
    ],
    clipboard: {
        matchVisual: false
    }
};
const formats = [
    'bold',
    'italic',
    'underline',
    'strike',
    'align',
    'list',
    'indent',
    'size',
    'header',
    'link',
    'image',
    'video',
    'color',
    'background'
];
function assign(target, _varArgs) {
    'use strict';
    if (target === null || target === undefined) {
        throw new TypeError('Cannot convert undefined or null to object');
    }
    const to = Object(target);
    for(let index = 1; index < arguments.length; index++){
        const nextSource = arguments[index];
        if (nextSource !== null && nextSource !== undefined) {
            for(const nextKey in nextSource){
                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                    to[nextKey] = nextSource[nextKey];
                }
            }
        }
    }
    return to;
}
const useQuill = function() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        theme,
        modules,
        formats
    };
    const quillRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const [isLoaded, setIsLoaded] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [obj, setObj] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        Quill: undefined,
        quillRef,
        quill: undefined,
        editorRef: quillRef,
        editor: undefined
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useQuill.useEffect": ()=>{
            if (!obj.Quill) {
                setObj({
                    "useQuill.useEffect": (prev)=>assign(prev, {
                            Quill: (()=>{
                                const e = new Error("Cannot find module 'quill'");
                                e.code = 'MODULE_NOT_FOUND';
                                throw e;
                            })().default
                        })
                }["useQuill.useEffect"]);
            }
            if (obj.Quill && !obj.quill && quillRef && quillRef.current && isLoaded) {
                const opts = assign(options, {
                    modules: assign(modules, options.modules),
                    formats: options.formats || formats,
                    theme: options.theme || theme
                });
                const quill = new obj.Quill(quillRef.current, opts);
                setObj(assign(assign({}, obj), {
                    quill,
                    editor: quill
                }));
            }
            setIsLoaded(true);
        }
    }["useQuill.useEffect"], [
        isLoaded,
        obj,
        options
    ]);
    return obj;
};
}),
"[project]/node_modules/react-quilljs/esm/index.js [app-client] (ecmascript, next/dynamic entry)", ((__turbopack_context__) => {

__turbopack_context__.n(__turbopack_context__.i("[project]/node_modules/react-quilljs/esm/index.js [app-client] (ecmascript)"));
}),
]);

//# sourceMappingURL=node_modules_react-quilljs_esm_index_a09c2965.js.map